<?php

namespace Container9hQB2OB;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getProduitControllerprodutsService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.service_locator.ygD6PAV.App\Controller\ProduitController::produts()' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.ygD6PAV.App\\Controller\\ProduitController::produts()'] = (new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'produitsRepository' => ['privates', 'App\\Repository\\ProduitsRepository', 'getProduitsRepositoryService', true],
            'CategoriesRepository' => ['privates', 'App\\Repository\\CategoriesRepository', 'getCategoriesRepositoryService', true],
            'authChecker' => ['privates', 'security.authorization_checker', 'getSecurity_AuthorizationCheckerService', false],
        ], [
            'produitsRepository' => 'App\\Repository\\ProduitsRepository',
            'CategoriesRepository' => 'App\\Repository\\CategoriesRepository',
            'authChecker' => '?',
        ]))->withContext('App\\Controller\\ProduitController::produts()', $container);
    }
}
